/**
 * reversebuffer - Give a reversed Audio Buffer from a forward playing buffer
 * @version v3.0.1
 * @license MIT
 * "Tue Jun 02 2015 12:11:54 GMT+0800 (SGT)"
 */!function e(n,t,r){function o(u,f){if(!t[u]){if(!n[u]){var a="function"==typeof require&&require;if(!f&&a)return a(u,!0);if(i)return i(u,!0);var w=new Error("Cannot find module '"+u+"'");throw w.code="MODULE_NOT_FOUND",w}var d=t[u]={exports:{}};n[u][0].call(d.exports,function(e){var t=n[u][1][e];return o(t?t:e)},d,d.exports,e,n,t,r)}return t[u].exports}for(var i="function"==typeof require&&require,u=0;u<r.length;u++)o(r[u]);return o}({1:[function(e,n,t){"use strict";function r(e){window.AudioContext=window.AudioContext||window.webkitAudioContext;var n,t,r,o=0,i=0;if(e instanceof AudioBuffer?(n=e,t=new window.AudioContext):(t=e.context||new window.AudioContext,n=e.buffer),n)for(r=t.createBuffer(n.numberOfChannels,n.length,n.sampleRate),o=0;o<n.numberOfChannels;o++){var u=r.getChannelData(o),f=n.getChannelData(o);for(i=0;i<n.length;i++)u[i]=f[n.length-i]}return r}n.exports=r},{}]},{},[1]);